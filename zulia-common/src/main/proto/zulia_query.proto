syntax = "proto3";


import "zulia_base.proto";

option java_package = "io.zulia.message";


message Query {
    enum Operator {
        AND = 0;
        OR = 1;
    }

    string q = 1;
    Operator defaultOp = 2;
    repeated string qf = 3;
    uint32 mm = 4;
    bool dismax = 5;
    float dismaxTie = 6;

}


message Facet {
    string label = 1;
    string value = 2;
}


message FacetRequest {
    repeated CountRequest countRequest = 1;
    repeated Facet drillDown = 2;
}

message CountRequest {
    Facet facetField = 1;
    uint32 maxFacets = 2;
    uint32 shardFacets = 3;
    bool computeError = 4;
    bool computePossibleMissed = 5;
}


message FacetCount {
    string facet = 1;
    uint64 count = 2;
    uint64 maxError = 3;
}

message FacetGroup {
    CountRequest countRequest = 1;
    repeated FacetCount facetCount = 2;
    bool possibleMissing = 3;
    uint64 maxValuePossibleMissing = 4;
}

message SortRequest {
    repeated FieldSort fieldSort = 1;
}

message FieldSort {
    enum Direction {
        ASCENDING = 0;
        DESCENDING = 1;
    };

    string sortField = 1;
    Direction direction = 2;
}

enum FetchType {
    FULL = 0;
    META = 1;
    NONE = 2;
}

message LastIndexResult {
    string indexName = 1;
    repeated ScoredResult lastForShard = 2;
}

message LastResult {
    repeated LastIndexResult lastIndexResult = 1;
}


message ScoredResult {
    string uniqueId = 1;
    float score = 2;
    uint32 docId = 3;
    string indexName = 4;
    uint32 shard = 5;
    uint32 resultIndex = 6;
    SortValues sortValues = 7;
    int64 timestamp = 8;
    ResultDocument resultDocument = 9;
    HighlightResult highlightResult = 10;
    AnalysisResult analysisResult = 11;
}

message SortValues {
    repeated SortValue sortValue = 1;
}

message SortValue {
    bool exists = 1;
    string stringValue = 2;
    int32 integerValue = 3;
    int64 longValue = 4;
    float floatValue = 5;
    double doubleValue = 6;
    int64 dateValue = 7;
}


message HighlightRequest {
    string field = 1;
    string preTag = 2;
    string postTag = 3;
    uint32 numberOfFragments = 4;
    uint32 fragmentLength = 5;
}

message HighlightResult {
    string field = 1;
    repeated string fragments = 2;
}

message AnalysisRequest {
    enum TermSort {
        ABC = 0;
        TFIDF = 1;
        TF = 2;
    }

    enum SummaryType {
        ALL_TERMS_TOP_N = 0;
        TOP_TERMS_TOP_N = 1;
    }

    string field = 1;
    bool tokens = 2;
    bool docTerms = 3;
    bool summaryTerms = 4;
    uint32 topN = 5;
    TermSort termSort = 6;
    uint32 minWordLen = 7;
    uint32 maxWordLen = 8;
    float minSegFreqPerc = 9;
    float maxSegFreqPerc = 10;
    uint32 minSegFreq = 11;
    uint32 maxSegFreq = 12;
    string analyzerOverride = 13;
    SummaryType summaryType = 14;
}


message AnalysisResult {
    AnalysisRequest analysisRequest = 1;
    repeated string token = 2;
    repeated Term terms = 3;
}


message CosineSimRequest {
    string field = 1;
    double similarity = 2;
    repeated double vector = 3;
}

message FieldSimilarity {
    string field = 1;
    Similarity similarity = 2;
}


message IndexShardResponse {
    string indexName = 1;
    ShardQueryResponse shardQueryResponse = 2;
}

message ShardQueryResponse {
    uint32 shardNumber = 1;
    string indexName = 2;
    uint32 totalHits = 3;
    repeated ScoredResult scoredResult = 4;
    ScoredResult next = 5;
    repeated FacetGroup facetGroup = 6;
    repeated AnalysisResult analysisResult = 7;
}